
pipeline {
    agent any

    stages {

        stage('SonarQube analysis') {
          steps {
            script {
                scannerHome = tool 'sonar-scanner'// must match the name of an actual scanner installation directory on your Jenkins build agent
            }
            withSonarQubeEnv('sonarqube-server') {// If you have configured more than one global server connection, you can specify its name as configured in Jenkins
              sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=develop"
            }
          }
        }

        stage('Build') {
            agent any
            steps {
                sh 'docker build -f Dockerfile -t website:latest .'

            }
        }

        stage('Test') {
            steps {
                sh 'npm install --save express'
                sh 'npm install --save-dev jest'
                sh 'npm install --save-dev supertest'
                sh 'npm run test'
            }
        }

        stage('Deploy') {
            steps {
                sh 'docker run -d -it --rm -p 3000:3000 --name my_website website:latest'
            }
        }
    }
}
